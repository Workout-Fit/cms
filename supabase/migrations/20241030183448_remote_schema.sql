

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";






COMMENT ON SCHEMA "public" IS 'standard public schema';



CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";






CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";






CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";





SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "public"."difficulties" (
    "id" integer NOT NULL,
    "name" character varying(20) NOT NULL
);


ALTER TABLE "public"."difficulties" OWNER TO "postgres";


ALTER TABLE "public"."difficulties" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."difficulty_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."equipments" (
    "id" integer NOT NULL,
    "name" character varying(40) NOT NULL
);


ALTER TABLE "public"."equipments" OWNER TO "postgres";


ALTER TABLE "public"."equipments" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."equipment_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."exercise_types" (
    "id" integer NOT NULL,
    "name" character varying(30) NOT NULL
);


ALTER TABLE "public"."exercise_types" OWNER TO "postgres";


ALTER TABLE "public"."exercise_types" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."exercise_type_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."exercises" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "name" character varying(100) NOT NULL,
    "muscle_group_id" integer NOT NULL,
    "exercise_type_id" integer NOT NULL,
    "equipment_id" integer NOT NULL,
    "difficulty_id" integer NOT NULL
);


ALTER TABLE "public"."exercises" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."muscle_groups" (
    "id" integer NOT NULL,
    "name" character varying(25) NOT NULL
);


ALTER TABLE "public"."muscle_groups" OWNER TO "postgres";


ALTER TABLE "public"."muscle_groups" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."muscle_group_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."profile_infos" (
    "height" numeric NOT NULL,
    "weight" numeric NOT NULL,
    "bio" character varying(140) NOT NULL,
    "profile_picture" character varying(200) NOT NULL,
    "name" character varying(50) NOT NULL,
    "user_id" "uuid" DEFAULT "auth"."uid"() NOT NULL
);


ALTER TABLE "public"."profile_infos" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."workouts" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "user_id" "uuid" DEFAULT "auth"."uid"() NOT NULL,
    "name" character varying(50) NOT NULL,
    "description" character varying(140),
    "creation_date" timestamp with time zone NOT NULL,
    "based_on" "uuid"
);


ALTER TABLE "public"."workouts" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."workouts_exercises" (
    "sets" integer NOT NULL,
    "repetitions" integer NOT NULL,
    "notes" character varying(140) NOT NULL,
    "exercise_id" "uuid" NOT NULL,
    "workout_id" "uuid" NOT NULL,
    "rest" integer NOT NULL
);


ALTER TABLE "public"."workouts_exercises" OWNER TO "postgres";


ALTER TABLE ONLY "public"."difficulties"
    ADD CONSTRAINT "difficulty_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."equipments"
    ADD CONSTRAINT "equipment_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."exercises"
    ADD CONSTRAINT "exercise_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."exercise_types"
    ADD CONSTRAINT "exercise_type_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."muscle_groups"
    ADD CONSTRAINT "muscle_group_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."profile_infos"
    ADD CONSTRAINT "profile_info_pkey" PRIMARY KEY ("user_id");



ALTER TABLE ONLY "public"."workouts_exercises"
    ADD CONSTRAINT "workouts_exercises_pkey" PRIMARY KEY ("exercise_id", "workout_id");



ALTER TABLE ONLY "public"."workouts"
    ADD CONSTRAINT "workouts_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."exercises"
    ADD CONSTRAINT "exercise_difficulty_id_fkey" FOREIGN KEY ("difficulty_id") REFERENCES "public"."difficulties"("id") ON DELETE SET NULL;



ALTER TABLE ONLY "public"."exercises"
    ADD CONSTRAINT "exercise_equipment_id_fkey" FOREIGN KEY ("equipment_id") REFERENCES "public"."equipments"("id") ON DELETE SET NULL;



ALTER TABLE ONLY "public"."exercises"
    ADD CONSTRAINT "exercise_exercise_type_id_fkey" FOREIGN KEY ("exercise_type_id") REFERENCES "public"."exercise_types"("id") ON DELETE SET NULL;



ALTER TABLE ONLY "public"."exercises"
    ADD CONSTRAINT "exercise_muscle_group_id_fkey" FOREIGN KEY ("muscle_group_id") REFERENCES "public"."muscle_groups"("id") ON DELETE SET NULL;



ALTER TABLE ONLY "public"."profile_infos"
    ADD CONSTRAINT "profile_info_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id");



ALTER TABLE ONLY "public"."workouts"
    ADD CONSTRAINT "workouts_based_on_fkey" FOREIGN KEY ("based_on") REFERENCES "public"."workouts"("id") ON DELETE SET NULL;



ALTER TABLE ONLY "public"."workouts_exercises"
    ADD CONSTRAINT "workouts_exercises_exercise_id_fkey" FOREIGN KEY ("exercise_id") REFERENCES "public"."exercises"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "public"."workouts_exercises"
    ADD CONSTRAINT "workouts_exercises_workout_id_fkey" FOREIGN KEY ("workout_id") REFERENCES "public"."workouts"("id") ON DELETE CASCADE;





ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";


GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";



































































































































































































GRANT ALL ON TABLE "public"."difficulties" TO "anon";
GRANT ALL ON TABLE "public"."difficulties" TO "authenticated";
GRANT ALL ON TABLE "public"."difficulties" TO "service_role";



GRANT ALL ON SEQUENCE "public"."difficulty_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."difficulty_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."difficulty_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."equipments" TO "anon";
GRANT ALL ON TABLE "public"."equipments" TO "authenticated";
GRANT ALL ON TABLE "public"."equipments" TO "service_role";



GRANT ALL ON SEQUENCE "public"."equipment_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."equipment_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."equipment_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."exercise_types" TO "anon";
GRANT ALL ON TABLE "public"."exercise_types" TO "authenticated";
GRANT ALL ON TABLE "public"."exercise_types" TO "service_role";



GRANT ALL ON SEQUENCE "public"."exercise_type_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."exercise_type_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."exercise_type_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."exercises" TO "anon";
GRANT ALL ON TABLE "public"."exercises" TO "authenticated";
GRANT ALL ON TABLE "public"."exercises" TO "service_role";



GRANT ALL ON TABLE "public"."muscle_groups" TO "anon";
GRANT ALL ON TABLE "public"."muscle_groups" TO "authenticated";
GRANT ALL ON TABLE "public"."muscle_groups" TO "service_role";



GRANT ALL ON SEQUENCE "public"."muscle_group_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."muscle_group_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."muscle_group_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."profile_infos" TO "anon";
GRANT ALL ON TABLE "public"."profile_infos" TO "authenticated";
GRANT ALL ON TABLE "public"."profile_infos" TO "service_role";



GRANT ALL ON TABLE "public"."workouts" TO "anon";
GRANT ALL ON TABLE "public"."workouts" TO "authenticated";
GRANT ALL ON TABLE "public"."workouts" TO "service_role";



GRANT ALL ON TABLE "public"."workouts_exercises" TO "anon";
GRANT ALL ON TABLE "public"."workouts_exercises" TO "authenticated";
GRANT ALL ON TABLE "public"."workouts_exercises" TO "service_role";



ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";






























RESET ALL;
